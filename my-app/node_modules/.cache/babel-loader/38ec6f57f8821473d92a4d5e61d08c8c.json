{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const checkUserCredentials = createAsyncThunk(\"users/checkUserCredentials\", async loginFormData => {\n  const {\n    username,\n    password\n  } = loginFormData;\n  const url = \"https://media.imukulsaini.repl.co/v1/login\";\n  const userResponse = await axios.post(url, {\n    username,\n    password\n  });\n  return userResponse.data;\n});\nexport const getUserData = createAsyncThunk(\"users/getUserData\", async apiPermission => {\n  const {\n    token,\n    userID\n  } = apiPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/users/${userID}`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.get(url, {\n    headers\n  });\n  console.log(userResponse.data);\n  return userResponse.data;\n});\nexport const updateUserData = createAsyncThunk(\"users/updateUserData\", async apiPermission => {\n  const {\n    token,\n    userID,\n    newUserData\n  } = apiPermission;\n  const {\n    firstName,\n    lastName,\n    bio,\n    website\n  } = newUserData;\n  const url = `https://media.imukulsaini.repl.co/v1/users/${userID}/profile`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.post(url, {\n    firstName,\n    lastName,\n    bio,\n    website\n  }, {\n    headers\n  });\n  return userResponse.data;\n});\nexport const createNewUser = createAsyncThunk(\"users/createNewUser\", async userPerm => {\n  const {\n    firstName,\n    lastName,\n    username,\n    password,\n    email\n  } = userPerm;\n  const url = `https://media.imukulsaini.repl.co/v1/signup`;\n  const userResponse = await axios.post(url, {\n    object: \"users\",\n    firstName,\n    lastName,\n    username,\n    password,\n    email\n  });\n  return userResponse.data;\n});\nexport const updateUserPassword = createAsyncThunk(\"users/updateUserPassword\", async apiPermission => {\n  const {\n    token,\n    userID,\n    newUserData\n  } = apiPermission;\n  const {\n    currentPassword,\n    newPassword\n  } = newUserData;\n  const url = `https://media.imukulsaini.repl.co/v1/users/${userID}/password`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.post(url, {\n    currentPassword,\n    newPassword\n  }, {\n    headers\n  });\n  return userResponse.data;\n});\nexport const deleteUserAccount = createAsyncThunk(\"users/deleteUserAccount\", async apiPermission => {\n  const {\n    token,\n    userID\n  } = apiPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/users/${userID}`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.delete(url, {\n    headers\n  });\n  return userResponse.data;\n});","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/features/User/userApi.js"],"names":["createAsyncThunk","axios","checkUserCredentials","loginFormData","username","password","url","userResponse","post","data","getUserData","apiPermission","token","userID","headers","authorization","get","console","log","updateUserData","newUserData","firstName","lastName","bio","website","createNewUser","userPerm","email","object","updateUserPassword","currentPassword","newPassword","deleteUserAccount","delete"],"mappings":"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","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const checkUserCredentials = createAsyncThunk(\r\n  \"users/checkUserCredentials\",\r\n  async (loginFormData) => {\r\n    const { username, password } = loginFormData;\r\n    \r\n    const url = \"https://media.imukulsaini.repl.co/v1/login\";\r\n    const userResponse = await axios.post(url, {\r\n      username,\r\n      password,\r\n    });\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\n\r\nexport const getUserData = createAsyncThunk(\r\n  \"users/getUserData\",\r\n  async (apiPermission) => {\r\n    const { token, userID } = apiPermission;\r\n    const url = `https://media.imukulsaini.repl.co/v1/users/${userID}`;\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n\r\n    const userResponse = await axios.get(url, { headers });\r\n    console.log(userResponse.data);\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const updateUserData = createAsyncThunk(\r\n  \"users/updateUserData\",\r\n  async (apiPermission) => {\r\n    const { token, userID, newUserData } = apiPermission;\r\n    const { firstName, lastName, bio, website ,} = newUserData;\r\n    const url = `https://media.imukulsaini.repl.co/v1/users/${userID}/profile`;\r\n\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n    const userResponse = await axios.post(\r\n      url,\r\n      { firstName, lastName, bio, website },\r\n      { headers }\r\n    );\r\n\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const createNewUser = createAsyncThunk(\r\n  \"users/createNewUser\",\r\n  async (userPerm) => {\r\n    const { firstName, lastName, username, password, email } = userPerm;\r\n    const url = `https://media.imukulsaini.repl.co/v1/signup`;\r\n\r\n    const userResponse = await axios.post(url, {\r\n      object: \"users\",\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      password,\r\n      email,\r\n    });\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const updateUserPassword = createAsyncThunk(\r\n  \"users/updateUserPassword\",\r\n  async (apiPermission) => {\r\n    const { token, userID, newUserData } = apiPermission;\r\n    const { currentPassword, newPassword } = newUserData;\r\n    const url = `https://media.imukulsaini.repl.co/v1/users/${userID}/password`;\r\n\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n    const userResponse = await axios.post(\r\n      url,\r\n      { currentPassword, newPassword },\r\n      { headers }\r\n    );\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const deleteUserAccount = createAsyncThunk(\r\n  \"users/deleteUserAccount\",\r\n  async (apiPermission) => {\r\n    const { token, userID } = apiPermission;\r\n    const url = `https://media.imukulsaini.repl.co/v1/users/${userID}`;\r\n\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n\r\n    const userResponse = await axios.delete(url, { headers });\r\n    return userResponse.data;\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}