{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { checkUserCredentials, getUserData, createNewUser, updateUserData } from \"./userApi\";\nconst initialState = {\n  userData: [],\n  token: '',\n  userID: '',\n  status: 'idle',\n  isUserLogin: false\n};\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [checkUserCredentials.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [checkUserCredentials.fulfilled]: (state, action) => {\n      state.status = 'fulfilled';\n      state.userID = action.payload.userData._id;\n      state.userData = action.payload.userData;\n      state.token = action.payload.token;\n      state.isUserLogin = true;\n    },\n    [checkUserCredentials.rejected]: (state, action) => {\n      state.status = 'error';\n    },\n    [getUserData.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getUserData.fulfilled]: (state, action) => {\n      state.userID = action.payload.userData._id;\n      state.isUserLogin = true;\n      state.userData = action.payload.userData;\n      state.status = 'fulfilled';\n    },\n    [getUserData.rejected]: (state, action) => {\n      state.status = 'error';\n    },\n    [createNewUser.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [createNewUser.fulfilled]: (state, action) => {\n      state.userID = action.payload.userData._id;\n      state.isUserLogin = true;\n      state.userData = action.payload.userData;\n      state.token = action.payload.token;\n      state.status = 'fulfilled';\n    },\n    [createNewUser.rejected]: (state, action) => {\n      state.status = 'error';\n    }\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/features/User/userSlice.js"],"names":["createSlice","checkUserCredentials","getUserData","createNewUser","updateUserData","initialState","userData","token","userID","status","isUserLogin","userSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","_id","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,oBAAT,EAAgCC,WAAhC,EAA8CC,aAA9C,EAA6DC,cAA7D,QAAkF,WAAlF;AAGA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,QAAQ,EAAC,EADO;AAEhBC,EAAAA,KAAK,EAAC,EAFU;AAGhBC,EAAAA,MAAM,EAAC,EAHS;AAIhBC,EAAAA,MAAM,EAAC,MAJS;AAKhBC,EAAAA,WAAW,EAAC;AALI,CAApB;AAQA,MAAMC,SAAS,GAAGX,WAAW,CAAC;AAC1BY,EAAAA,IAAI,EAAC,OADqB;AAE1BP,EAAAA,YAF0B;AAG1BQ,EAAAA,QAAQ,EAAE,EAHgB;AAM1BC,EAAAA,aAAa,EAAC;AACV,KAACb,oBAAoB,CAACc,OAAtB,GAAiC,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC9CD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACH,KAHS;AAIV,KAACR,oBAAoB,CAACiB,SAAtB,GAAkC,CAACF,KAAD,EAAOC,MAAP,KAAgB;AAE9CD,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AAEAO,MAAAA,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACE,OAAP,CAAeb,QAAf,CAAwBc,GAAvC;AACAJ,MAAAA,KAAK,CAACV,QAAN,GAAiBW,MAAM,CAACE,OAAP,CAAeb,QAAhC;AAEAU,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACE,OAAP,CAAeZ,KAA7B;AACAS,MAAAA,KAAK,CAACN,WAAN,GAAoB,IAApB;AAGH,KAfS;AAgBV,KAACT,oBAAoB,CAACoB,QAAtB,GAAgC,CAACL,KAAD,EAAOC,MAAP,KAAgB;AAC5CD,MAAAA,KAAK,CAACP,MAAN,GAAe,OAAf;AACH,KAlBS;AAoBV,KAACP,WAAW,CAACa,OAAb,GAAsB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAClCD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACH,KAtBS;AAuBV,KAACP,WAAW,CAACgB,SAAb,GAAwB,CAACF,KAAD,EAAOC,MAAP,KAAgB;AAEpCD,MAAAA,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACE,OAAP,CAAeb,QAAf,CAAwBc,GAAvC;AACAJ,MAAAA,KAAK,CAACN,WAAN,GAAoB,IAApB;AACAM,MAAAA,KAAK,CAACV,QAAN,GAAiBW,MAAM,CAACE,OAAP,CAAeb,QAAhC;AACAU,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACH,KA7BS;AA8BV,KAACP,WAAW,CAACmB,QAAb,GAAuB,CAACL,KAAD,EAAOC,MAAP,KAAgB;AACnCD,MAAAA,KAAK,CAACP,MAAN,GAAe,OAAf;AACH,KAhCS;AAkCV,KAACN,aAAa,CAACY,OAAf,GAAwB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACpCD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACH,KApCS;AAqCV,KAACN,aAAa,CAACe,SAAf,GAA0B,CAACF,KAAD,EAAOC,MAAP,KAAgB;AAEtCD,MAAAA,KAAK,CAACR,MAAN,GAAeS,MAAM,CAACE,OAAP,CAAeb,QAAf,CAAwBc,GAAvC;AACAJ,MAAAA,KAAK,CAACN,WAAN,GAAoB,IAApB;AACAM,MAAAA,KAAK,CAACV,QAAN,GAAiBW,MAAM,CAACE,OAAP,CAAeb,QAAhC;AACAU,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACE,OAAP,CAAeZ,KAA7B;AAEAS,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACH,KA7CS;AA8CV,KAACN,aAAa,CAACkB,QAAf,GAAyB,CAACL,KAAD,EAAOC,MAAP,KAAgB;AACrCD,MAAAA,KAAK,CAACP,MAAN,GAAe,OAAf;AACH;AAhDS;AANY,CAAD,CAA7B;AA4DA,eAAeE,SAAS,CAACW,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { checkUserCredentials , getUserData , createNewUser ,updateUserData} from \"./userApi\";\r\n\r\n\r\nconst initialState= {\r\n    userData:[],\r\n    token:'',\r\n    userID:'',\r\n    status:'idle',\r\n    isUserLogin:false\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name:'users',\r\n    initialState,\r\n    reducers: {\r\n        \r\n    },\r\n    extraReducers:{\r\n        [checkUserCredentials.pending ] :(state ,action)=>{\r\n            state.status = 'loading'\r\n        },\r\n        [checkUserCredentials.fulfilled]: (state,action)=>{\r\n            \r\n            state.status = 'fulfilled';\r\n\r\n            state.userID = action.payload.userData._id;\r\n            state.userData = action.payload.userData\r\n\r\n            state.token = action.payload.token ;\r\n            state.isUserLogin = true;\r\n\r\n\r\n        },\r\n        [checkUserCredentials.rejected]:(state,action)=>{\r\n            state.status = 'error'\r\n        },\r\n\r\n        [getUserData.pending]:(state,action)=>{\r\n            state.status = 'loading'\r\n        },\r\n        [getUserData.fulfilled]:(state,action)=>{\r\n            \r\n            state.userID = action.payload.userData._id;\r\n            state.isUserLogin = true;\r\n            state.userData = action.payload.userData\r\n            state.status = 'fulfilled';\r\n        },\r\n        [getUserData.rejected]:(state,action)=>{\r\n            state.status = 'error'\r\n        },\r\n        \r\n        [createNewUser.pending]:(state,action)=>{\r\n            state.status = 'loading'\r\n        },\r\n        [createNewUser.fulfilled]:(state,action)=>{\r\n            \r\n            state.userID = action.payload.userData._id;\r\n            state.isUserLogin = true;\r\n            state.userData = action.payload.userData\r\n            state.token = action.payload.token ;\r\n\r\n            state.status = 'fulfilled';\r\n        },\r\n        [createNewUser.rejected]:(state,action)=>{\r\n            state.status = 'error'\r\n        }\r\n\r\n\r\n    }\r\n})\r\n\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}