{"ast":null,"code":"var _jsxFileName = \"/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/app/pages/PostID/PostID.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./PostID.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { PostCard } from \"../components/post/PostCard\";\nimport { useParams } from \"react-router\";\nimport { NavBar } from \"../components/navbar/nav\";\nimport { getPostByID } from \"../../../features/post/PostAPI\";\nimport { PostCreateComment } from \"../components/post/PostCreateComment\";\nimport { PostComments } from \"../components/post/PostComments\";\nimport { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostID() {\n  _s();\n\n  console.log('postID render ');\n  const {\n    postsID,\n    postIDStatus\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const {\n    postID\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const [postInfo, setPostInfo] = useState([]);\n  const [isPostHaveData, setPostHaveData] = useState(false);\n  const {\n    userID,\n    token\n  } = useSelector(state => state.users);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (postIDStatus === 'idle') {\n      dispatch(getPostByID({\n        userID,\n        token,\n        postID\n      }));\n    }\n  }, [userID, token, postID, postIDStatus]); // useEffect(()=>{\n  //   setPostInfo(postsID)\n  //   setPostHaveData(true) ;\n  // },[postsID])\n  // function PostCommentShow(postID) {\n  //   const [isPostCommentShow, setPostCommentsShow] = useState(false);\n  //   return (\n  //     <>\n  //       {isPostCommentShow ? (\n  //         <div\n  //           onClick={() => setPostCommentsShow(false)}\n  //           className=\"comments__view-action\"\n  //         >\n  //           hide comments\n  //         </div>\n  //       ) : (\n  //         <div\n  //           onClick={() => setPostCommentsShow(true)}\n  //           className=\"comments__view-action\"\n  //         >\n  //           view comments\n  //         </div>\n  //       )}\n  //       {isPostCommentShow && (\n  //         <div className=\"post__comments-show\">\n  //           <PostComments postID={postID} />\n  //           true aa gya bhai\n  //         </div>\n  //       )}\n  //     </>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-id\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-id__left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"post-id__main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => navigate((state === null || state === void 0 ? void 0 : state.from) ? state.from : \"/\"),\n        className: \"back__action-btn\",\n        children: /*#__PURE__*/_jsxDEV(BiArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), pos, /*#__PURE__*/_jsxDEV(PostCard, {\n        post: postInfo,\n        isBookmarkIconShow: true,\n        isLikeIconShow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-id__right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostID, \"YFHzmkseZkCYAQcyvb8GFdUtbtY=\", false, function () {\n  return [useSelector, useDispatch, useParams, useLocation, useSelector, useNavigate];\n});\n\n_c = PostID;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostID\");","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/app/pages/PostID/PostID.jsx"],"names":["useSelector","useDispatch","useEffect","PostCard","useParams","NavBar","getPostByID","PostCreateComment","PostComments","useState","useNavigate","useLocation","BiArrowBack","PostID","console","log","postsID","postIDStatus","state","posts","dispatch","postID","postInfo","setPostInfo","isPostHaveData","setPostHaveData","userID","token","users","navigate","from","pos"],"mappings":"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","sourcesContent":["import \"./PostID.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { PostCard } from \"../components/post/PostCard\";\r\nimport { useParams } from \"react-router\";\r\nimport { NavBar } from \"../components/navbar/nav\";\r\nimport { getPostByID } from \"../../../features/post/PostAPI\";\r\nimport { PostCreateComment } from \"../components/post/PostCreateComment\";\r\nimport { PostComments } from \"../components/post/PostComments\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\n\r\nexport function PostID() {\r\n  console.log('postID render ')\r\n  const { postsID ,postIDStatus } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const { postID } = useParams();\r\n  const { state } = useLocation();\r\n  const [postInfo, setPostInfo ] = useState([]);\r\n  const [isPostHaveData , setPostHaveData ] = useState(false);\r\n  const { userID, token } = useSelector((state) => state.users);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if(postIDStatus === 'idle'){\r\n\r\n      dispatch(getPostByID({ userID, token, postID }));\r\n    }\r\n  }, [userID, token, postID,postIDStatus]) ;\r\n\r\n  // useEffect(()=>{\r\n  //   setPostInfo(postsID)\r\n  //   setPostHaveData(true) ;\r\n  // },[postsID])\r\n  \r\n  // function PostCommentShow(postID) {\r\n  //   const [isPostCommentShow, setPostCommentsShow] = useState(false);\r\n  //   return (\r\n  //     <>\r\n  //       {isPostCommentShow ? (\r\n  //         <div\r\n  //           onClick={() => setPostCommentsShow(false)}\r\n  //           className=\"comments__view-action\"\r\n  //         >\r\n  //           hide comments\r\n  //         </div>\r\n  //       ) : (\r\n  //         <div\r\n  //           onClick={() => setPostCommentsShow(true)}\r\n  //           className=\"comments__view-action\"\r\n  //         >\r\n  //           view comments\r\n  //         </div>\r\n  //       )}\r\n\r\n  //       {isPostCommentShow && (\r\n  //         <div className=\"post__comments-show\">\r\n  //           <PostComments postID={postID} />\r\n  //           true aa gya bhai\r\n  //         </div>\r\n  //       )}\r\n  //     </>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div className=\"post-id\">\r\n      <NavBar />\r\n      <div className=\"post-id__left\"></div>\r\n\r\n      <section className=\"post-id__main\">\r\n        <div\r\n          onClick={ () => navigate(state?.from ? state.from : \"/\") }\r\n          className=\"back__action-btn\"\r\n        >\r\n          <BiArrowBack />\r\n        </div>\r\n          { pos}\r\n            <PostCard post={postInfo} \r\n            isBookmarkIconShow={true}\r\n            isLikeIconShow={true}\r\n            >\r\n              {/* <PostCreateComment postCommentRoom={true} /> */}\r\n              {/* <PostCommentShow postID={postsID._id} /> */}\r\n            </PostCard>\r\n        \r\n        \r\n        \r\n      </section>\r\n\r\n      <div className=\"post-id__right\"></div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}