{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport { combineReducers } from \"redux\";\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from '../../features/User/userSlice';\nimport postsReducer from '../../features/post/PostSlice';\nimport conversationReducer from '../../features/Message/ConversationSlice';\nimport messageReducer from \"../../features/Message/MessageSlice\";\nimport postCommentsReducer from \"../../features/post/PostCommentsSlice\";\nimport userLikesReducer from \"../../features/User/userLikesSlice\";\nimport userBookmarkReducer from \"../../features/User/userBookmarkSlice\";\n\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst rootPersistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['users', 'posts', 'conversation', 'messages']\n};\nconst authPersistConfig = {\n  key: 'users',\n  storage,\n  whitelist: ['token']\n};\nconst rootReducer = combineReducers({\n  users: persistReducer(authPersistConfig, userReducer),\n  posts: postsReducer,\n  conversation: conversationReducer,\n  messages: messageReducer,\n  postComments: postCommentsReducer,\n  userLikes: userLikesReducer,\n  userBookmark: userBookmarkReducer\n});\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  enhancer\n});","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/app/store/store.js"],"names":["configureStore","persistReducer","combineReducers","storage","userReducer","postsReducer","conversationReducer","messageReducer","postCommentsReducer","userLikesReducer","userBookmarkReducer","enhancer","window","__REDUX_DEVTOOLS_EXTENSION__","rootPersistConfig","key","blacklist","authPersistConfig","whitelist","rootReducer","users","posts","conversation","messages","postComments","userLikes","userBookmark","persistedReducer","store","reducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAAUC,cAAV,QAAgC,eAAhC;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;;AAGA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAxD;;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAC,MADoB;AAExBZ,EAAAA,OAFwB;AAGxBa,EAAAA,SAAS,EAAC,CAAC,OAAD,EAAS,OAAT,EAAiB,cAAjB,EAAgC,UAAhC;AAHc,CAA1B;AAKA,MAAMC,iBAAiB,GAAG;AACxBF,EAAAA,GAAG,EAAC,OADoB;AAExBZ,EAAAA,OAFwB;AAGxBe,EAAAA,SAAS,EAAC,CAAC,OAAD;AAHc,CAA1B;AAMA,MAAMC,WAAW,GAAGjB,eAAe,CAAC;AAElCkB,EAAAA,KAAK,EAACnB,cAAc,CAACgB,iBAAD,EAAmBb,WAAnB,CAFc;AAGlCiB,EAAAA,KAAK,EAAChB,YAH4B;AAIlCiB,EAAAA,YAAY,EAAEhB,mBAJoB;AAKlCiB,EAAAA,QAAQ,EAAChB,cALyB;AAMlCiB,EAAAA,YAAY,EAAChB,mBANqB;AAOlCiB,EAAAA,SAAS,EAAChB,gBAPwB;AAQlCiB,EAAAA,YAAY,EAAGhB;AARmB,CAAD,CAAnC;AAYA,MAAMiB,gBAAgB,GAAG1B,cAAc,CAACa,iBAAD,EAAmBK,WAAnB,CAAvC;AAEA,OAAO,MAAMS,KAAK,GAAG5B,cAAc,CAAC;AAClC6B,EAAAA,OAAO,EAACF,gBAD0B;AAGlChB,EAAAA;AAHkC,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport {  persistReducer } from 'redux-persist';\r\nimport {combineReducers} from \"redux\"; \r\nimport storage from 'redux-persist/lib/storage' ;\r\n\r\nimport userReducer from '../../features/User/userSlice';\r\nimport postsReducer from '../../features/post/PostSlice';\r\nimport conversationReducer from '../../features/Message/ConversationSlice';\r\nimport messageReducer from \"../../features/Message/MessageSlice\";\r\nimport postCommentsReducer from \"../../features/post/PostCommentsSlice\";\r\nimport userLikesReducer from \"../../features/User/userLikesSlice\";\r\nimport userBookmarkReducer from \"../../features/User/userBookmarkSlice\";\r\n\r\n\r\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nconst rootPersistConfig = {\r\n  key:'root',\r\n  storage,\r\n  blacklist:['users','posts','conversation','messages']\r\n}\r\nconst authPersistConfig = {\r\n  key:'users',\r\n  storage,\r\n  whitelist:['token']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n  users:persistReducer(authPersistConfig,userReducer),\r\n  posts:postsReducer,\r\n  conversation :conversationReducer,\r\n  messages:messageReducer,\r\n  postComments:postCommentsReducer,\r\n  userLikes:userLikesReducer,\r\n  userBookmark : userBookmarkReducer\r\n  \r\n})\r\n\r\nconst persistedReducer = persistReducer(rootPersistConfig,rootReducer)\r\n\r\nexport const store = configureStore({\r\n  reducer:persistedReducer,\r\n  \r\n  enhancer\r\n})"]},"metadata":{},"sourceType":"module"}