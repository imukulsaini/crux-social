{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getConversation } from \"./ConversationApi\";\nconst initialState = {\n  status: 'idle',\n  members: [],\n  conversationRoom: []\n};\nconst conversationSlice = createSlice({\n  name: 'conversation',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getConversation.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getConversation.fulfilled]: (state, action) => {\n      state.status = 'fulfilled';\n      state.conversationRoom = action.payload.conversation;\n    },\n    [getConversation.rejected]: (state, action) => {\n      state.status = 'error';\n    }\n  }\n});\nexport default conversationSlice.reducer;","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/features/Message/ConversationSlice.js"],"names":["createSlice","getConversation","initialState","status","members","conversationRoom","conversationSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","conversation","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAA+B,mBAA/B;AAEA,MAAMC,YAAY,GAAE;AAEhBC,EAAAA,MAAM,EAAC,MAFS;AAGhBC,EAAAA,OAAO,EAAC,EAHQ;AAIhBC,EAAAA,gBAAgB,EAAC;AAJD,CAApB;AAQA,MAAMC,iBAAiB,GAAGN,WAAW,CAAC;AAClCO,EAAAA,IAAI,EAAC,cAD6B;AAElCL,EAAAA,YAFkC;AAGlCM,EAAAA,QAAQ,EAAC,EAHyB;AAMlCC,EAAAA,aAAa,EAAC;AAEV,KAACR,eAAe,CAACS,OAAjB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACzCD,MAAAA,KAAK,CAACR,MAAN,GAAe,SAAf;AACH,KAJS;AAKV,KAACF,eAAe,CAACY,SAAjB,GAA6B,CAACF,KAAD,EAAOC,MAAP,KAAgB;AAEzCD,MAAAA,KAAK,CAACR,MAAN,GAAe,WAAf;AAEAQ,MAAAA,KAAK,CAACN,gBAAN,GAAyBO,MAAM,CAACE,OAAP,CAAeC,YAAxC;AACH,KAVS;AAWV,KAACd,eAAe,CAACe,QAAjB,GAA2B,CAACL,KAAD,EAAOC,MAAP,KAAgB;AACvCD,MAAAA,KAAK,CAACR,MAAN,GAAe,OAAf;AACH;AAbS;AANoB,CAAD,CAArC;AAuBA,eAAeG,iBAAiB,CAACW,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport  {getConversation} from \"./ConversationApi\";\r\n\r\nconst initialState ={\r\n\r\n    status:'idle',\r\n    members:[],\r\n    conversationRoom:[],\r\n    \r\n}\r\n\r\nconst conversationSlice = createSlice({\r\n    name:'conversation',\r\n    initialState,\r\n    reducers:{\r\n\r\n    },\r\n    extraReducers:{\r\n\r\n        [getConversation.pending ] :(state ,action)=>{\r\n            state.status = 'loading'\r\n        },\r\n        [getConversation.fulfilled]: (state,action)=>{\r\n\r\n            state.status = 'fulfilled';\r\n\r\n            state.conversationRoom = action.payload.conversation;\r\n        },\r\n        [getConversation.rejected]:(state,action)=>{\r\n            state.status = 'error'\r\n        },\r\n    }\r\n})\r\n\r\nexport default conversationSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}