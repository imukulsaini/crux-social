{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getUserBookmark = createAsyncThunk(\"userBookmark/getUserBookmark\", async apiPermission => {\n  const {\n    token,\n    userID\n  } = apiPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.get(url, {\n    headers\n  });\n  console.log(userResponse.data.userBookmarks);\n  return userResponse.data.bookmarks;\n});\nexport const addBookmark = createAsyncThunk(\"userBookmark/addBookmark\", async postPermission => {\n  const {\n    token,\n    userID,\n    postID\n  } = postPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.post(url, {\n    postID\n  }, {\n    headers\n  });\n  return userResponse.data;\n});\nexport const removeBookmark = createAsyncThunk(\"userBookmark/removeBookmark\", async postPermission => {\n  const {\n    token,\n    userID,\n    postID\n  } = postPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.delete(url, {\n    headers,\n    data: {\n      postID\n    }\n  });\n  return userResponse.data;\n});","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/features/User/userBookmarkApi.js"],"names":["createAsyncThunk","axios","getUserBookmark","apiPermission","token","userID","url","headers","authorization","userResponse","get","console","log","data","userBookmarks","bookmarks","addBookmark","postPermission","postID","post","removeBookmark","delete"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,8BAD6C,EAE7C,MAAOG,aAAP,IAAyB;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,aAA1B;AACA,QAAMG,GAAG,GAAI,wCAAuCD,MAAO,YAA3D;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAEJ;AADD,GAAhB;AAGA,QAAMK,YAAY,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUJ,GAAV,EAAe;AAAEC,IAAAA;AAAF,GAAf,CAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,IAAb,CAAkBC,aAA9B;AACA,SAAOL,YAAY,CAACI,IAAb,CAAkBE,SAAzB;AACD,CAX4C,CAAxC;AAcP,OAAO,MAAMC,WAAW,GAAGhB,gBAAgB,CACzC,0BADyC,EAEzC,MAAOiB,cAAP,IAA0B;AAExB,QAAM;AAAEb,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBa,IAAAA;AAAjB,MAA4BD,cAAlC;AAEA,QAAMX,GAAG,GAAI,wCAAuCD,MAAO,YAA3D;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAEJ;AADD,GAAhB;AAIA,QAAMK,YAAY,GAAG,MAAMR,KAAK,CAACkB,IAAN,CAAWb,GAAX,EAAgB;AAAEY,IAAAA;AAAF,GAAhB,EAA4B;AAAEX,IAAAA;AAAF,GAA5B,CAA3B;AAGA,SAAOE,YAAY,CAACI,IAApB;AACD,CAfwC,CAApC;AAkBP,OAAO,MAAMO,cAAc,GAAGpB,gBAAgB,CAC5C,6BAD4C,EAE5C,MAAOiB,cAAP,IAA0B;AAExB,QAAM;AAAEb,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBa,IAAAA;AAAjB,MAA4BD,cAAlC;AACA,QAAMX,GAAG,GAAI,wCAAuCD,MAAO,YAA3D;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAEJ;AADD,GAAhB;AAIA,QAAMK,YAAY,GAAG,MAAMR,KAAK,CAACoB,MAAN,CAAaf,GAAb,EAAkB;AAC3CC,IAAAA,OAD2C;AAE3CM,IAAAA,IAAI,EAAE;AACJK,MAAAA;AADI;AAFqC,GAAlB,CAA3B;AAMA,SAAOT,YAAY,CAACI,IAApB;AACD,CAjB2C,CAAvC","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getUserBookmark = createAsyncThunk(\r\n  \"userBookmark/getUserBookmark\",\r\n  async (apiPermission) => {\r\n    const { token, userID } = apiPermission;\r\n    const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n    const userResponse = await axios.get(url, { headers });\r\n    console.log(userResponse.data.userBookmarks)\r\n    return userResponse.data.bookmarks;\r\n  }\r\n);\r\n\r\nexport const addBookmark = createAsyncThunk(\r\n  \"userBookmark/addBookmark\",\r\n  async (postPermission) => {\r\n\r\n    const { token, userID, postID } = postPermission;\r\n\r\n    const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n\r\n    const userResponse = await axios.post(url, { postID }, { headers });\r\n    \r\n\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\nexport const removeBookmark = createAsyncThunk(\r\n  \"userBookmark/removeBookmark\",\r\n  async (postPermission) => {\r\n\r\n    const { token, userID, postID } = postPermission;\r\n    const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n\r\n    const userResponse = await axios.delete(url, {\r\n      headers,\r\n      data: {\r\n        postID,\r\n      },\r\n    });\r\n    return userResponse.data;\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}