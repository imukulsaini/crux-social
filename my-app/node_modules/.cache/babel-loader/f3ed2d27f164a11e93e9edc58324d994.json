{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const checkUserCredentials = createAsyncThunk(\"users/checkUserCredentials\", async loginFormData => {\n  const {\n    username,\n    password\n  } = loginFormData;\n  const url = 'https://media.imukulsaini.repl.co/v1/login';\n  const userResponse = await axios.post(url, {\n    username,\n    password\n  });\n  return userResponse.data;\n});\nexport const getUserData = createAsyncThunk(\"users/getUserData\", async apiPermission => {\n  const {\n    token,\n    userID\n  } = apiPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/users/${userID}`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.get(url, {\n    headers\n  });\n  console.log(userResponse.data);\n  return userResponse.data;\n});\nexport const updateUserData = createAsyncThunk(\"users/updateUserData\", async apiPermission => {\n  const {\n    token,\n    userID,\n    newUserData\n  } = apiPermission;\n  const {\n    firstName,\n    lastName,\n    bio,\n    website\n  } = newUserData;\n  const url = `https://media.imukulsaini.repl.co/v1/users/${userID}/profile`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.post(url, {\n    firstName,\n    lastName,\n    bio,\n    website\n  }, {\n    headers\n  });\n  console.log('user response ', userResponse.data);\n  return userResponse.data;\n});\nexport const createNewUser = createAsyncThunk(\"users/createNewUser\", async userPerm => {\n  const {\n    firstName,\n    lastName,\n    username,\n    password,\n    email\n  } = userPerm;\n  console.log({\n    firstName,\n    lastName,\n    username,\n    password,\n    email\n  });\n  const url = `https://media.imukulsaini.repl.co/v1/signup`;\n  const userResponse = await axios.post(url, {\n    object: 'users',\n    firstName,\n    lastName,\n    username,\n    password,\n    email\n  });\n  return userResponse.data;\n});\nexport const updateUserPassword = createAsyncThunk(\"users/updateUserPassword\", async apiPermission => {\n  const {\n    token,\n    userID,\n    newUserData\n  } = apiPermission;\n  const {\n    currentPassword,\n    newPassword\n  } = newUserData;\n  const url = `https://media.imukulsaini.repl.co/users/${userID}/password`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.post(url, {\n    currentPassword,\n    newPassword\n  }, {\n    headers\n  });\n  return userResponse.data;\n});\nexport const deleteUserAccount = createAsyncThunk(\"users/deleteUserAccount\", async apiPermission => {\n  const {\n    token,\n    userID\n  } = apiPermission;\n  const url = `https://media.imukulsaini.repl.co/users/${userID}`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.delete(url, {\n    headers\n  });\n  return userResponse.data;\n});","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/features/User/userApi.js"],"names":["createAsyncThunk","axios","checkUserCredentials","loginFormData","username","password","url","userResponse","post","data","getUserData","apiPermission","token","userID","headers","authorization","get","console","log","updateUserData","newUserData","firstName","lastName","bio","website","createNewUser","userPerm","email","object","updateUserPassword","currentPassword","newPassword","deleteUserAccount","delete"],"mappings":"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","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\nexport const checkUserCredentials = createAsyncThunk(\"users/checkUserCredentials\" , async (loginFormData )=>{\r\n    \r\n    const { username , password } = loginFormData;\r\n    const url = 'https://media.imukulsaini.repl.co/v1/login'\r\n    const userResponse = await axios.post(url,{\r\n        username,\r\n        password\r\n    });\r\n    return userResponse.data;\r\n})\r\n\r\nexport const getUserData = createAsyncThunk(\"users/getUserData\" , async(apiPermission)=>{\r\n    \r\nconst { token , userID } = apiPermission;\r\nconst url = `https://media.imukulsaini.repl.co/v1/users/${userID}`;\r\nconst headers= {\r\n    authorization:token\r\n}\r\n\r\nconst userResponse = await axios.get(url,{headers});\r\nconsole.log(userResponse.data)\r\nreturn userResponse.data;\r\n\r\n})\r\n\r\n\r\n\r\n\r\nexport const updateUserData = createAsyncThunk(\"users/updateUserData\" , async(apiPermission)=>{\r\n    const { token , userID , newUserData  } = apiPermission;\r\n    const { firstName,lastName,bio,website} = newUserData;\r\n    const url = `https://media.imukulsaini.repl.co/v1/users/${userID}/profile`;\r\n\r\n    const headers= {\r\n        authorization:token\r\n    }\r\n    const userResponse = await axios.post(url,\r\n     {firstName,lastName,bio,website}\r\n    ,{ headers });\r\n     console.log('user response ',userResponse.data)\r\n    \r\n\r\n    return userResponse.data;\r\n    \r\n})\r\n\r\nexport const createNewUser = createAsyncThunk(\"users/createNewUser\" , async(userPerm)=>{\r\n\r\n    const { firstName,lastName,username,password,email  } = userPerm;\r\nconsole.log({firstName,lastName,username,password,email})\r\n    const url = `https://media.imukulsaini.repl.co/v1/signup`;\r\n\r\n   \r\n    const userResponse = await axios.post(url,\r\n     {object:'users',firstName,lastName,username,password,email}\r\n    );\r\n    return userResponse.data;\r\n    \r\n})\r\n\r\nexport const updateUserPassword = createAsyncThunk(\"users/updateUserPassword\" , async(apiPermission)=>{\r\n    const { token , userID , newUserData  } = apiPermission;\r\n    const { currentPassword ,newPassword } = newUserData;\r\n    const url = `https://media.imukulsaini.repl.co/users/${userID}/password`;\r\n\r\n    const headers= {\r\n        authorization:token\r\n    }\r\n    const userResponse = await axios.post(url,\r\n        {currentPassword,newPassword}\r\n    ,{ headers });\r\n    return userResponse.data;\r\n    \r\n})\r\n\r\nexport const deleteUserAccount = createAsyncThunk(\"users/deleteUserAccount\" ,async(apiPermission)=>{\r\n    const { token , userID   } = apiPermission;\r\n    const url = `https://media.imukulsaini.repl.co/users/${userID}`;\r\n\r\n    const headers= {\r\n        authorization:token\r\n    }\r\n    \r\n    const userResponse = await axios.delete(url,\r\n    { headers });\r\n    return userResponse.data;\r\n})\r\n    "]},"metadata":{},"sourceType":"module"}