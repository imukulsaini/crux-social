{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { checkUserCredentials, getUserLikes, likePost, unLikePost } from \"./userLikesApi\";\nconst initialState = {\n  userLikes: [],\n  status: 'idle',\n  error: null\n};\nconst userLikesSlice = createSlice({\n  name: 'usersLikes',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getUserLikes.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getUserLikes.fulfilled]: (state, action) => {\n      state.status = 'fulfilled';\n    },\n    [getUserLikes.rejected]: (state, action) => {\n      state.status = 'error';\n    },\n    [likePost.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [likePost.fulfilled]: (state, action) => {\n      state.status = 'fulfilled';\n    },\n    [likePost.rejected]: (state, action) => {\n      state.status = 'error';\n    },\n    [unLikePost.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [unLikePost.fulfilled]: (state, action) => {\n      state.status = 'fulfilled';\n      const findRemovePostInUserLike = state.userLikes.findIndex(post => post._id === action.payload.postID);\n\n      if (findRemovePostInUserLike !== -1) {\n        state.userLikes.splice(findRemovePostInUserLike, 1);\n      }\n    },\n    [unLikePost.rejected]: (state, action) => {\n      state.status = 'error';\n    }\n  }\n});\nexport default userLikesSlice.reducer;","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/features/User/userLikesSlice.js"],"names":["createSlice","checkUserCredentials","getUserLikes","likePost","unLikePost","initialState","userLikes","status","error","userLikesSlice","name","reducers","extraReducers","pending","state","action","fulfilled","rejected","findRemovePostInUserLike","findIndex","post","_id","payload","postID","splice","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,oBAAT,EAAgCC,YAAhC,EAA8CC,QAA9C,EAAwDC,UAAxD,QAAyE,gBAAzE;AAGA,MAAMC,YAAY,GAAE;AAEhBC,EAAAA,SAAS,EAAC,EAFM;AAGhBC,EAAAA,MAAM,EAAC,MAHS;AAIhBC,EAAAA,KAAK,EAAC;AAJU,CAApB;AAQA,MAAMC,cAAc,GAAGT,WAAW,CAAC;AAE/BU,EAAAA,IAAI,EAAC,YAF0B;AAG/BL,EAAAA,YAH+B;AAK/BM,EAAAA,QAAQ,EAAE,EALqB;AAO/BC,EAAAA,aAAa,EAAC;AAGV,KAACV,YAAY,CAACW,OAAd,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACtCD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACH,KALS;AAMV,KAACL,YAAY,CAACc,SAAd,GAA0B,CAACF,KAAD,EAAOC,MAAP,KAAgB;AAItCD,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACH,KAXS;AAYV,KAACL,YAAY,CAACe,QAAd,GAAwB,CAACH,KAAD,EAAOC,MAAP,KAAgB;AACpCD,MAAAA,KAAK,CAACP,MAAN,GAAe,OAAf;AACH,KAdS;AAiBV,KAACJ,QAAQ,CAACU,OAAV,GAAmB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC/BD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACH,KAnBS;AAoBV,KAACJ,QAAQ,CAACa,SAAV,GAAqB,CAACF,KAAD,EAAOC,MAAP,KAAgB;AAGjCD,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACH,KAxBS;AAyBV,KAACJ,QAAQ,CAACc,QAAV,GAAoB,CAACH,KAAD,EAAOC,MAAP,KAAgB;AAChCD,MAAAA,KAAK,CAACP,MAAN,GAAe,OAAf;AACH,KA3BS;AA8BV,KAACH,UAAU,CAACS,OAAZ,GAAqB,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACjCD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACH,KAhCS;AAiCV,KAACH,UAAU,CAACY,SAAZ,GAAuB,CAACF,KAAD,EAAOC,MAAP,KAAgB;AACnCD,MAAAA,KAAK,CAACP,MAAN,GAAe,WAAf;AACA,YAAMW,wBAAwB,GAAGJ,KAAK,CAACR,SAAN,CAAgBa,SAAhB,CAC7BC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACO,OAAP,CAAeC,MADP,CAAjC;;AAGE,UAAGL,wBAAwB,KAAK,CAAC,CAAjC,EAAmC;AACjCJ,QAAAA,KAAK,CAACR,SAAN,CAAgBkB,MAAhB,CAAuBN,wBAAvB,EAAgD,CAAhD;AACD;AACN,KAzCS;AA0CV,KAACd,UAAU,CAACa,QAAZ,GAAsB,CAACH,KAAD,EAAOC,MAAP,KAAgB;AAClCD,MAAAA,KAAK,CAACP,MAAN,GAAe,OAAf;AACH;AA5CS;AAPiB,CAAD,CAAlC;AAuDA,eAAeE,cAAc,CAACgB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { checkUserCredentials , getUserLikes ,likePost ,unLikePost} from \"./userLikesApi\";\r\n\r\n\r\nconst initialState= {\r\n\r\n    userLikes:[],\r\n    status:'idle',\r\n    error:null,\r\n   \r\n}\r\n\r\nconst userLikesSlice = createSlice({\r\n    \r\n    name:'usersLikes',\r\n    initialState,\r\n\r\n    reducers: {},\r\n\r\n    extraReducers:{\r\n\r\n\r\n        [getUserLikes.pending ] :(state ,action)=>{\r\n            state.status = 'loading'\r\n        },\r\n        [getUserLikes.fulfilled]: (state,action)=>{\r\n            \r\n\r\n            \r\n            state.status = 'fulfilled';\r\n        },\r\n        [getUserLikes.rejected]:(state,action)=>{\r\n            state.status = 'error'\r\n        },\r\n\r\n\r\n        [likePost.pending]:(state,action)=>{\r\n            state.status = 'loading'\r\n        },\r\n        [likePost.fulfilled]:(state,action)=>{\r\n            \r\n\r\n            state.status = 'fulfilled';\r\n        },\r\n        [likePost.rejected]:(state,action)=>{\r\n            state.status = 'error'\r\n        },\r\n\r\n\r\n        [unLikePost.pending]:(state,action)=>{\r\n            state.status = 'loading'\r\n        },\r\n        [unLikePost.fulfilled]:(state,action)=>{\r\n            state.status = 'fulfilled';\r\n            const findRemovePostInUserLike = state.userLikes.findIndex(\r\n                post => post._id === action.payload.postID\r\n              ) \r\n              if(findRemovePostInUserLike !== -1){\r\n                state.userLikes.splice(findRemovePostInUserLike,1)\r\n              }\r\n        },\r\n        [unLikePost.rejected]:(state,action)=>{\r\n            state.status = 'error'\r\n        }\r\n    }\r\n})\r\n\r\nexport default userLikesSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}