{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getUserBookmark = createAsyncThunk(\"userBookmark/getUserBookmark\", async apiPermission => {\n  const {\n    token,\n    userID\n  } = apiPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.get(url, {\n    headers\n  });\n  return userResponse.data;\n});\nexport const addBookmark = createAsyncThunk(\"userBookmark/addBookmark\", async postPermission => {\n  const {\n    token,\n    userID,\n    postID\n  } = postPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\n  const headers = {\n    authorization: token\n  };\n  const userResponse = await axios.post(url, {\n    postID\n  }, {\n    headers\n  });\n  return userResponse.data;\n});\nexport const removeBookmark = createAsyncThunk(\"userBookmark/removeBookmark\", async postPermission => {\n  console.log('remove bookmark 1');\n  const {\n    token,\n    userID,\n    postID\n  } = postPermission;\n  const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\n  const headers = {\n    authorization: token\n  };\n  console.log('remove bookmark 2');\n  const userResponse = await axios.delete(url, {\n    headers,\n    data: {\n      postID\n    }\n  });\n  console.log('remove bookmark 3', userResponse);\n  return userResponse.data;\n});","map":{"version":3,"sources":["/Users/light/Documents/Mukul/Mukul Web Neog/mediaCode/media/my-app/src/features/User/userBookmarkApi.js"],"names":["createAsyncThunk","axios","getUserBookmark","apiPermission","token","userID","url","headers","authorization","userResponse","get","data","addBookmark","postPermission","postID","post","removeBookmark","console","log","delete"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,8BAD6C,EAE7C,MAAOG,aAAP,IAAyB;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,aAA1B;AACA,QAAMG,GAAG,GAAI,wCAAuCD,MAAO,YAA3D;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAEJ;AADD,GAAhB;AAGA,QAAMK,YAAY,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUJ,GAAV,EAAe;AAAEC,IAAAA;AAAF,GAAf,CAA3B;AACA,SAAOE,YAAY,CAACE,IAApB;AACD,CAV4C,CAAxC;AAaP,OAAO,MAAMC,WAAW,GAAGZ,gBAAgB,CACzC,0BADyC,EAEzC,MAAOa,cAAP,IAA0B;AAExB,QAAM;AAAET,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBS,IAAAA;AAAjB,MAA4BD,cAAlC;AAEA,QAAMP,GAAG,GAAI,wCAAuCD,MAAO,YAA3D;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAEJ;AADD,GAAhB;AAIA,QAAMK,YAAY,GAAG,MAAMR,KAAK,CAACc,IAAN,CAAWT,GAAX,EAAgB;AAAEQ,IAAAA;AAAF,GAAhB,EAA4B;AAAEP,IAAAA;AAAF,GAA5B,CAA3B;AAGA,SAAOE,YAAY,CAACE,IAApB;AACD,CAfwC,CAApC;AAkBP,OAAO,MAAMK,cAAc,GAAGhB,gBAAgB,CAC5C,6BAD4C,EAE5C,MAAOa,cAAP,IAA0B;AACxBI,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,QAAM;AAAEd,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBS,IAAAA;AAAjB,MAA4BD,cAAlC;AAEA,QAAMP,GAAG,GAAI,wCAAuCD,MAAO,YAA3D;AACA,QAAME,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAEJ;AADD,GAAhB;AAGAa,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,QAAMT,YAAY,GAAG,MAAMR,KAAK,CAACkB,MAAN,CAAab,GAAb,EAAkB;AAC3CC,IAAAA,OAD2C;AAE3CI,IAAAA,IAAI,EAAE;AACJG,MAAAA;AADI;AAFqC,GAAlB,CAA3B;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCT,YAAhC;AAEA,SAAOA,YAAY,CAACE,IAApB;AACD,CAtB2C,CAAvC","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getUserBookmark = createAsyncThunk(\r\n  \"userBookmark/getUserBookmark\",\r\n  async (apiPermission) => {\r\n    const { token, userID } = apiPermission;\r\n    const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n    const userResponse = await axios.get(url, { headers });\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\nexport const addBookmark = createAsyncThunk(\r\n  \"userBookmark/addBookmark\",\r\n  async (postPermission) => {\r\n\r\n    const { token, userID, postID } = postPermission;\r\n\r\n    const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n\r\n    const userResponse = await axios.post(url, { postID }, { headers });\r\n    \r\n\r\n    return userResponse.data;\r\n  }\r\n);\r\n\r\nexport const removeBookmark = createAsyncThunk(\r\n  \"userBookmark/removeBookmark\",\r\n  async (postPermission) => {\r\n    console.log('remove bookmark 1')\r\n\r\n    const { token, userID, postID } = postPermission;\r\n\r\n    const url = `https://media.imukulsaini.repl.co/v1/${userID}/bookmarks`;\r\n    const headers = {\r\n      authorization: token,\r\n    };\r\n    console.log('remove bookmark 2')\r\n\r\n    const userResponse = await axios.delete(url, {\r\n      headers,\r\n      data: {\r\n        postID,\r\n      },\r\n    });\r\n    console.log('remove bookmark 3',userResponse)\r\n\r\n    return userResponse.data;\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}